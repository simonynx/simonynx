package tempest.utils{	import flash.external.ExternalInterface;	import flash.utils.Dictionary;	import flash.utils.getQualifiedClassName;	/**	 * 一个单例类，用来获取URL地址后所带参数值对	 * @author wsk	 */	public class QueryString	{		// singleton instance		private static var _instance:QueryString;		private static var _allowInstance:Boolean;		private var _pairDict:Dictionary;		private var _url:String;		private var _pairs:Array;		/**		 * 		 * @return 		 */		public static function getInstance():QueryString		{			if (QueryString._instance == null)			{				QueryString._allowInstance=true;				QueryString._instance=new QueryString();				QueryString._allowInstance=false;			}			return QueryString._instance;		}		/**		 * 		 * @throws Error		 */		public function QueryString()		{			this.parseValues();			if (!QueryString._allowInstance)			{				throw new Error("Error: Use QueryString.getInstance() instead of the new keyword.");			}		}		private function parseValues():void		{			this._url=ExternalInterface.call("document.location.search.toString");			this._pairDict=new Dictionary(true);			this._pairs=this._url.split("?")[1].split("&");			var pairName:String;			var pairValue:String;			for (var i:int=0; i < this._pairs.length; i++)			{				pairName=this._pairs[i].split("=")[0];				pairValue=this._pairs[i].split("=")[1];				this._pairDict[pairName]=pairValue;			}		}		/**		 * 返回指定参数的值		 *		 * @param $val 参数		 */		public function getValue($val:String):String		{			if (this._pairDict[$val] == null)			{				return "";			}			else			{				return this._pairDict[$val];			}		}		/**		 * 		 * @return 		 */		public  function toString():String		{			return getQualifiedClassName(this);		}	}}